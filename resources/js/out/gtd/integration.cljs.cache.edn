;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name gtd.integration, :imports nil, :requires {platform gtd.platform, gtd.platform gtd.platform}, :uses nil, :defs {osx-mail-applescript {:name gtd.integration/osx-mail-applescript, :file "src/gtd/integration.cljs", :line 4, :column 1, :end-line 4, :end-column 36, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 4, :column 16, :end-line 4, :end-column 36, :private true}}, osx-finder-applescript {:name gtd.integration/osx-finder-applescript, :file "src/gtd/integration.cljs", :line 17, :column 1, :end-line 17, :end-column 38, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 17, :column 16, :end-line 17, :end-column 38, :private true}}, run-applescript {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 28, :column 8, :end-line 28, :end-column 23, :private true, :arglists (quote ([code callback]))}, :private true, :name gtd.integration/run-applescript, :variadic false, :file "src/gtd/integration.cljs", :end-column 23, :method-params ([code callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code callback]))}, retrieve-current-app-data-osx {:name gtd.integration/retrieve-current-app-data-osx, :file "src/gtd/integration.cljs", :line 38, :column 1, :end-line 38, :end-column 40, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 38, :column 11, :end-line 38, :end-column 40}}, get-current-app-info-osx {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 47, :column 8, :end-line 47, :end-column 32, :private true, :arglists (quote ([])), :doc "Return info about the current frontmost application on OSX"}, :private true, :name gtd.integration/get-current-app-info-osx, :variadic false, :file "src/gtd/integration.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return info about the current frontmost application on OSX"}, get-current-app-info {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 60, :column 7, :end-line 60, :end-column 27, :arglists (quote ([]))}, :name gtd.integration/get-current-app-info, :variadic false, :file "src/gtd/integration.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, js-get-current-app-info {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 65, :column 16, :end-line 65, :end-column 39, :export true, :arglists (quote ([]))}, :name gtd.integration/js-get-current-app-info, :variadic false, :file "src/gtd/integration.cljs", :end-column 39, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-current-app-data {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 69, :column 7, :end-line 69, :end-column 27, :arglists (quote ([fun]))}, :name gtd.integration/get-current-app-data, :variadic false, :file "src/gtd/integration.cljs", :end-column 27, :method-params ([fun]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun]))}, js-get-current-app-data {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/integration.cljs", :line 75, :column 16, :end-line 75, :end-column 39, :export true, :arglists (quote ([fun]))}, :name gtd.integration/js-get-current-app-data, :variadic false, :file "src/gtd/integration.cljs", :end-column 39, :method-params ([fun]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:default :name :id :hierarchy}, :order [:hierarchy :id :default :name]}, :doc nil}