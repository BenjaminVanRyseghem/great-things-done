;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name gtd.crypto, :imports nil, :requires nil, :uses nil, :defs {remote {:name gtd.crypto/remote, :file "src/gtd/crypto.cljs", :line 4, :column 1, :end-line 4, :end-column 22, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/crypto.cljs", :line 4, :column 16, :end-line 4, :end-column 22, :private true}}, crypto {:name gtd.crypto/crypto, :file "src/gtd/crypto.cljs", :line 5, :column 1, :end-line 5, :end-column 22, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/crypto.cljs", :line 5, :column 16, :end-line 5, :end-column 22, :private true}}, encrypt {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/crypto.cljs", :line 14, :column 7, :end-line 14, :end-column 14, :arglists (quote ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}])), :doc "Encrypt the provided text with the provided password. An optional algorithm can be provided, default is `aes-256-ctr`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :arglists-meta (nil)}}, :name gtd.crypto/encrypt, :variadic true, :file "src/gtd/crypto.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :arglists-meta (nil)}, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :doc "Encrypt the provided text with the provided password. An optional algorithm can be provided, default is `aes-256-ctr`"}, decrypt {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/crypto.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}])), :doc "Decrypt the provided text with the provided password. An optional algorithm can be provided, default is `aes-256-ctr`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :arglists-meta (nil)}}, :name gtd.crypto/decrypt, :variadic true, :file "src/gtd/crypto.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :arglists-meta (nil)}, :method-params [(text password {:keys [algorithm], :or {algorithm "aes-256-ctr"}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists ([text password & {:keys [algorithm], :or {algorithm "aes-256-ctr"}}]), :doc "Decrypt the provided text with the provided password. An optional algorithm can be provided, default is `aes-256-ctr`"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:algorithm}, :order [:algorithm]}, :doc "Encryption/Decryption node modulde based on https://gist.github.com/chris-rock/993d8a22c7138d1f0d2e#file-crypto-ctr-js"}