;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name gtd.platform, :imports nil, :requires {fs node.fs, node.fs node.fs}, :uses nil, :defs {ensure-database-projects-path! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 76, :column 7, :end-line 76, :end-column 37, :arglists (quote ([])), :doc "Ensure that `database-projects-path` exists on disk"}, :name gtd.platform/ensure-database-projects-path!, :variadic false, :file "src/gtd/platform.cljs", :end-column 37, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ensure that `database-projects-path` exists on disk"}, separator {:name gtd.platform/separator, :file "src/gtd/platform.cljs", :line 27, :column 1, :end-line 27, :end-column 15, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 27, :column 6, :end-line 27, :end-column 15}}, ensure-config-file! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 81, :column 7, :end-line 81, :end-column 26, :arglists (quote ([])), :doc "Ensure that the config file exists"}, :name gtd.platform/ensure-config-file!, :variadic false, :file "src/gtd/platform.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ensure that the config file exists"}, database-projects-path {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 54, :column 7, :end-line 54, :end-column 29, :arglists (quote ([])), :doc "Return the database path for the projects"}, :name gtd.platform/database-projects-path, :variadic false, :file "src/gtd/platform.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return the database path for the projects"}, ensure-database-path! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 66, :column 7, :end-line 66, :end-column 28, :arglists (quote ([])), :doc "Ensure that `database-path` exists on disk"}, :name gtd.platform/ensure-database-path!, :variadic false, :file "src/gtd/platform.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ensure that `database-path` exists on disk"}, database-path {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([])), :doc "Return the database path according to the operating system"}, :name gtd.platform/database-path, :variadic false, :file "src/gtd/platform.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return the database path according to the operating system"}, for-os {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 10, :column 7, :end-line 10, :end-column 13, :arglists (quote ([& body])), :doc "Execute code depending on the current OS", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(body)], :arglists ([& body]), :arglists-meta (nil)}}, :name gtd.platform/for-os, :variadic true, :file "src/gtd/platform.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(body)], :arglists ([& body]), :arglists-meta (nil)}, :method-params [(body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists ([& body]), :doc "Execute code depending on the current OS"}, ensure-database-meta-projects-path! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 71, :column 7, :end-line 71, :end-column 42, :arglists (quote ([])), :doc "Ensure that `database-meta-projects-path` exists on disk"}, :name gtd.platform/ensure-database-meta-projects-path!, :variadic false, :file "src/gtd/platform.cljs", :end-column 42, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ensure that `database-meta-projects-path` exists on disk"}, home {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 32, :column 8, :end-line 32, :end-column 12, :private true, :arglists (quote ([& body])), :doc "Creates a path starting from current user home", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(body)], :arglists ([& body]), :arglists-meta (nil)}}, :private true, :name gtd.platform/home, :variadic true, :file "src/gtd/platform.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(body)], :arglists ([& body]), :arglists-meta (nil)}, :method-params [(body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists ([& body]), :doc "Creates a path starting from current user home"}, config-path {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 59, :column 8, :end-line 59, :end-column 19, :private true, :arglists (quote ([])), :doc "Return the OS Specific path to config files"}, :private true, :name gtd.platform/config-path, :variadic false, :file "src/gtd/platform.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return the OS Specific path to config files"}, database-meta-projects-path {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 49, :column 7, :end-line 49, :end-column 34, :arglists (quote ([])), :doc "Return the database path for the meta projects"}, :name gtd.platform/database-meta-projects-path, :variadic false, :file "src/gtd/platform.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return the database path for the meta projects"}, platform-translation {:name gtd.platform/platform-translation, :file "src/gtd/platform.cljs", :line 4, :column 1, :end-line 4, :end-column 36, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 4, :column 16, :end-line 4, :end-column 36, :private true}}, logged-user {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 93, :column 7, :end-line 93, :end-column 18, :arglists (quote ([]))}, :name gtd.platform/logged-user, :variadic false, :file "src/gtd/platform.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ensure-inbox! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/gtd/platform.cljs", :line 86, :column 7, :end-line 86, :end-column 20, :arglists (quote ([])), :doc "Ensure that the inbox folder exists"}, :name gtd.platform/ensure-inbox!, :variadic false, :file "src/gtd/platform.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ensure that the inbox folder exists"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:default}, :order [:default]}, :doc nil}