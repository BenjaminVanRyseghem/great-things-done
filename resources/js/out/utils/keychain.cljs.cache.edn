;; Analyzed by ClojureScript 1.7.122
{:name utils.keychain, :doc "A native Node module to get, add, replace, and delete passwords. On OS X the passwords are managed by the Keychain, and on Windows they are managed by the Credential Vault.", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {keytar {:name utils.keychain/keytar, :file "src/utils/keychain.cljs", :line 4, :column 1, :end-line 4, :end-column 22, :private true, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 4, :column 16, :end-line 4, :end-column 22, :private true}}, add-password! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 6, :column 7, :end-line 6, :end-column 20, :arglists (quote ([service account password])), :doc "Add the `password` for the `service` and `account` to the keychain."}, :name utils.keychain/add-password!, :variadic false, :file "src/utils/keychain.cljs", :end-column 20, :method-params ([service account password]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([service account password])), :doc "Add the `password` for the `service` and `account` to the keychain."}, get-password {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([service account])), :doc "Get the stored password for the `service` and `account`."}, :name utils.keychain/get-password, :variadic false, :file "src/utils/keychain.cljs", :end-column 19, :method-params ([service account]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([service account])), :doc "Get the stored password for the `service` and `account`."}, delete-password! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 20, :column 7, :end-line 20, :end-column 23, :arglists (quote ([service account])), :doc "Delete the stored `password` for the `service` and `account`."}, :name utils.keychain/delete-password!, :variadic false, :file "src/utils/keychain.cljs", :end-column 23, :method-params ([service account]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([service account])), :doc "Delete the stored `password` for the `service` and `account`."}, replace-password! {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 28, :column 7, :end-line 28, :end-column 24, :arglists (quote ([service account password])), :doc "Replace the `password` for the `service` and `account` in the keychain."}, :name utils.keychain/replace-password!, :variadic false, :file "src/utils/keychain.cljs", :end-column 24, :method-params ([service account password]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([service account password])), :doc "Replace the `password` for the `service` and `account` in the keychain."}, find-password {:protocol-inline nil, :meta {:file "/Users/benjamin/projects/great-things-done/src/utils/keychain.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([service])), :doc "Find the first password for the `service` in the keychain."}, :name utils.keychain/find-password, :variadic false, :file "src/utils/keychain.cljs", :end-column 20, :method-params ([service]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([service])), :doc "Find the first password for the `service` in the keychain."}}}